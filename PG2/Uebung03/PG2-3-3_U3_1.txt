#include <iostream>
#include <new>
#include <array>
#include <vector>


typedef struct{
    char c;
    int n;
    double d;
} Mix;


// ##### c) #####
int * extractInts(std::vector<Mix> const& y){

    int * p = new(std::nothrow) int[3];

    for (int i = 0; i < 3; i++){
        p[i] = y[i].n;
    }

    return p;
}
// ###############


// ##### d) #####
void printArray(std::array<int, 3> const& values){
    for (int const& value : values){
        std::cout << value << '\n';
    }
}
// ###############


int main(){

    // ##### a) #####
    Mix mix1{'a', 1, 3.14};
    Mix mix2{'b', 2, 6.28};
    Mix mix3{'c', 3, 9.81};

    std::vector<Mix> v;
    v.push_back(mix1);
    v.push_back(mix2);
    v.push_back(mix3);
    // ###############


    // ##### b) #####
    int * cArr = extractInts(v);
    // ###############

    // ##### d) #####
    std::array<int, 3> intStdArray; 

    for (int i = 0; i < 3; i++){
        intStdArray.at(i) = cArr[i];
    }

    printArray(intStdArray);
    // ###############

    //! clear memory for good measure
    delete cArr;

    return 0;
}