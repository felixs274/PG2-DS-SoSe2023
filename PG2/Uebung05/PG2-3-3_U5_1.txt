      Impl.-Datei      |      Header-Datei     |                 Aufgabe
#############################################################################################
   Dekl.   |    Def.   |   Dekl.   |    Def.   | Alle Eintr√§ge in dieser Spalte sind global.
#############################################################################################
           |     X     |           |           | returntype name([params]){ /* ... */ }
---------------------------------------------------------------------------------------------
           |     X     |           |           | constexpr type NAME = value;
---------------------------------------------------------------------------------------------
           |     X     |           |           | template <typename T> returntype templateName([params]) { /*...*/}
---------------------------------------------------------------------------------------------
           |           |           |     X     | extern const type CONSTNAME = value;
---------------------------------------------------------------------------------------------
           |     X     |           |           | type globalName = value;
---------------------------------------------------------------------------------------------
           |           |     X     |           | extern const type CONSTNAME;
---------------------------------------------------------------------------------------------
           |           |     X     |           | extern type globalname;
---------------------------------------------------------------------------------------------
           |           |           |     X     | returntype funcname([params]);
---------------------------------------------------------------------------------------------
           |     X     |           |           | inline const type CONSTNAME = value;
---------------------------------------------------------------------------------------------
           |     X     |           |           | returntype structName::methodName([params]){ /* ... */ }
---------------------------------------------------------------------------------------------
           |           |           |     X     | enum class Name;
---------------------------------------------------------------------------------------------
           |     X     |           |           | structName varName{value, [value, ...]}
---------------------------------------------------------------------------------------------
           |     X     |           |           | type globalName = value;
---------------------------------------------------------------------------------------------
           |     X     |           |           | enumClassName varName{value}
